<?php
// Подключаемся к серверу,  
// на котором будем создавать базу данных. 
$host = "localhost";
$db = "goods";
$charset = "utf8";
$user = "root";
$pass = ""; 

//$delBD = mysql_query("DROP DATABASE goods"); 

if(!mysql_connect("$host", "$user", "$pass")) exit(mysql_error()); 
else {echo "";} 
     
//$r = mysql_query("CREATE DATABASE $db"); 
//if(!$r)exit(mysql_error()); 


if (!mysql_select_db($db)) exit(mysql_error()); 
else{echo "";} 

echo "База данных успешно создана."; 



$dsn = "mysql:host=$host;dbname=$db;charset=$charset";
$opt = array(
    PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
);
$pdo = new PDO($dsn, $user, $pass, $opt);

/*
PDO::ATTR_ERRMODE ( 3 )
Установка способа обработки ошибок:
PDO::ERRMODE_EXCEPTION (2) - В дополнение к установкам уровня вывода ошибок, PDO выбросит PDOException - исключение и задаст его свойства, так чтобы отразить код ошибки и сведения об ошибке. Этот параметр также полезен при отладке, так как он будет эффективно "останавливать" сценарий в точке ошибки, очень быстро указывая «пальцем» на потенциальные проблемы в вашем коде (Кстати, транзакции автоматически откатываются, если было выброшено исключение).

Режим исключений также полезен ещё и, потому, что вы можете структурировать обработку ошибок более четко, чем при традиционном стиле PHP - предупреждений и с меньшим количеством кода / вложенности, чем при дефолтном режиме, где требуется явно городить проверки возвращаемого значения при каждом обращении к базе. Вообще работа с исключениями это отдельная тема, о ней позже. На закуску: простая конструкция отлова PDO исключений:
	try
	{
	  // Здесь потенциально опасный код... использующий PDO
	  $dbh = new PDO($dsn, $user, $password);
	  $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	}
	//Какая прелесть: PHP5 позволяет указать некоторые типы входных параметров!
	//Здесь мы поставили ловушку на отлов экземпляров класса PDOException:
	catch(PDOException $e)
	{
	  // Здесь выводим сообщение на экран:
	  echo ‘Соединение с БД, с треском провалилось!
			Посмотри что ты наделал: ’.$e->getMessage();
	}

PDO::ATTR_DEFAULT_FETCH_MODE ( 19 )
Доступный начиная с PHP 5.2.0
Задаёт тип получаемого результата по-умолчанию:
    $db->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC);

PDO::FETCH_ASSOC (integer)
Указывает, что метод, осуществляющий выборку данных, должен возвращать каждую строку результирующего набора в виде ассоциативного массива, индексы которого соответствуют именам столбцов результата выборки. Если в результирующем наборе несколько столбцов с одинаковыми именами, PDO::FETCH_ASSOC будет возвращать по одному значению для каждого столбца. Значения дублирующихся столбцов будут утеряны.

*/
var_dump($opt);

    echo $opt[3] ;
